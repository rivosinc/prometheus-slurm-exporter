# SPDX-FileCopyrightText: 2023 Rivos Inc.
#
# SPDX-License-Identifier: Apache-2.0

build_dir := "./build"
set dotenv-path := "../.env"
set dotenv-load
set shell := ["bash", "-ceo", "pipefail"]

default:
  just --list

build:
  rm -rf {{build_dir}}
  mkdir {{build_dir}}
  CGO_CXXFLAGS="-I${SLURM_INCLUDE_DIR}" CGO_LDFLAGS="-L${SLURM_LIB_DIR} -lslurmfull" go build -o {{build_dir}}/slurm_exporter server.go

devel: build
  LD_LIBRARY_PATH="${SLURM_LIB_DIR}" {{build_dir}}/slurm_exporter

gotest:
  #!/bin/bash
  set -aeuxo pipefail
  CGO_CXXFLAGS="-I${SLURM_INCLUDE_DIR}"
  CGO_LDFLAGS="-L${SLURM_LIB_DIR} -lslurmfull"
  LD_LIBRARY_PATH="${SLURM_LIB_DIR}"
  TEST_CLUSTER=true
  go test

cppnodetest:
  rm -rf {{build_dir}}/test && mkdir -p {{build_dir}}/test
  g++ test/test_util.cpp test/node_test.cpp *.cpp -I. -I${SLURM_INCLUDE_DIR} -L${SLURM_LIB_DIR} -lslurmfull -o {{build_dir}}/test/node_test -g
  @echo Testing Node Fetcher
  LD_LIBRARY_PATH=$SLURM_LIB_DIR {{build_dir}}/test/node_test

cppjobtest:
  #!/bin/bash
  set -axu
  rm -rf {{build_dir}}/test && mkdir -p {{build_dir}}/test
  g++ test/test_util.cpp test/job_test.cpp *.cpp -I. -I${SLURM_INCLUDE_DIR} -L${SLURM_LIB_DIR} -lslurmfull -o {{build_dir}}/test/job_test -g
  # this is assumed to be on the test cluster w/o other running slurm jobs
  scancel -u
  SID=`sbatch test/sleep.sh  | awk '{print $4}'`
  while [[ `squeue -j ${SID} --noheader -o %t` != "R" ]]; do echo "waiting for job to start..." && sleep 1; done
  LD_LIBRARY_PATH=$SLURM_LIB_DIR {{build_dir}}/test/job_test
  scancel $SID


swigdebug:
  rm -rf {{build_dir}}/swig && mkdir -p {{build_dir}}/swig
  swig -c++ -go -intgosize 64 -outdir {{build_dir}}/swig -o {{build_dir}}/swig/slurmcprom_wrap.cpp -verbose slurmcprom.swigcxx
